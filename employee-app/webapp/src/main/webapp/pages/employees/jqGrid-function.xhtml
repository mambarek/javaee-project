<ui:composition
        xmlns="http://www.w3.org/1999/xhtml"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:jsf="http://xmlns.jcp.org/jsf"
        xmlns:p="http://primefaces.org/ui"
        xmlns:pe="http://xmlns.jcp.org/jsf/composite/prime-empl">


    <div class="card" >
        <div class="card-header corp-block-header">
            #{employeeMsg['employee.table.title']} - jqGrid
        </div>
        <div class="card-block" style="padding: 0" id="gridContainer">

                <table style='width: 100% !important;' id="grid"/>
                <div id="gridPager"/>

        </div>
        <div class="card-footer">
            <h:form id="create_employee_form" rendered="#{empty editEmployeeController.model}">
                <h:commandLink id="create_button" styleClass="btn btn-primary" >
                    <i class="fa fa-user-plus"
                       aria-hidden="true"/>&#xA0; #{employeeMsg['employee.table.col.create']}
                    <f:ajax listener="#{editEmployeeController.createNewEmployee()}" render="editor"/>
                </h:commandLink>
            </h:form>
        </div>
    </div>
    <script>
        $.jgrid.defaults.width = 780;
        $.jgrid.defaults.responsive = true;
        $.jgrid.defaults.styleUI = 'Bootstrap4';
        $.jgrid.defaults.iconSet = "Octicons";
    </script>
    <style>
        .ui-jqgrid
        {
            font-size:0.8rem
        }
    </style>
    <h:outputScript>
        $(document).ready(function () {

        var grid = $('#grid');
        var pagerId = '#gridPager';
        var currentPage = #{editEmployeeController.currentTabPage};
        var data = [];

        grid.jqGrid({
        regional: '#{facesContext.viewRoot.locale.language}',
        //styleUI : 'Bootstrap4',
        //iconSet : 'fontAwesome',
        datatype: function(postdata) {
        var thegrid = this;
        var currPage = $(this).getGridParam('page');

        if(currPage == 0 &amp;&amp; data.length &lt; 20){
        postdata.rows = 20;

        if(data.length &lt; currPage*10){
            data = [];
        postdata.rows = currPage*10;
        };

        if(data.length == 0)
        $.ajax({
        url: 'http://localhost:8080/webapp/rest/EmployeeService/employee/filter',
        data:postdata,
        dataType:"json",
        complete: function(jsonData,stat){
        if(stat=="success") {
        //var thegrid = jQuery("#list")[0];
        //thegrid.addJSONData(jsonData.responseJSON.slice(0,10));

        Array.prototype.push.apply(data, jsonData.responseJSON);
        thegrid.addJSONData(data);
        }
        }
        });
        }
        else{
        thegrid.addJSONData(data.slice(data.length-10, data.length));
        }

        if(data.length &gt; 20 &amp;&amp; data.length &lt; currPage*10){
        $.ajax({
        url: 'http://localhost:8080/webapp/rest/EmployeeService/employee/filter',
        data:postdata,
        dataType:"json",
        complete: function(jsonData,stat){
        if(stat=="success") {
        //var thegrid = jQuery("#list")[0];
        //thegrid.addJSONData(jsonData.responseJSON.slice(0,10));
        Array.prototype.push.apply(data, jsonData.responseJSON);

        }
        }
        })};


        },

        jsonReader: {
        repeatitems: false,
        id: "id",
        root: function (obj) { return obj; },
        //page: function (obj) { return 3; },
        total: function (obj) { return 10; }, // total page number
        records: function (obj) { return 100; } // total records number

        },
        //minColWidth: 75,
        colModel: [

        { label: ' ', name: 'id', width: 30,
        formatter: editButton, filter: false, sort: false,
        resizable: false, minWidth: 30, fixed: true
        },
        { label: '#{employeeMsg['employee.table.col.firstName']}', name: 'firstName', width: 150, coloptions: {columns: false} },
        { label: '#{employeeMsg['employee.table.col.lastName']}', name: 'lastName', width: 150 },
        { label: '#{employeeMsg['employee.table.col.salary']}', name: 'salary', width: 150 },
        { label: '#{employeeMsg['employee.table.col.birthDate']}', name: 'birthDate', width: 150 }
        ],

        height: 'auto',
        //width:'800',
        autoWidth: true,
        responsive: true,
        menubar: true,
        caption : 'Aktionen',

        colMenu : true,
        shrinkToFit: true,
        /*forceFit: true,
        gridview: true,*/
        rowNum: 10,
        viewrecords: true,
        //records: 100,
        //totalrows: 100,
        altRows : false,
        pager: pagerId,
        page: currentPage


        });


        //mygrid.setGridWidth(850);
        // activate the toolbar searching

/*        $('#jqGrid').jqGrid('filterToolbar',{
        stringResult: true,
        searchOnEnter: false,
        searchOperators : true
        });*/

        grid.jqGrid('navGrid',pagerId, {
        search: true, // show search button on the toolbar
        add: true,
        edit: false,
        del: false,
        refresh: false
        });


        grid.jqGrid('menubarAdd',  [
        {
        id : 'das',
        //cloasoncall : true,
        title : 'Sort by Category',
        click : function ( event) {
            grid.jqGrid('sortGrid','CategoryName');
        }
        },
        {
        divider : true,
        },
        {
        id : 'was',
        //cloasoncall : true,
        title : 'Toggle Visibility',
        click : function ( event) {
        var state = (this.p.gridstate === 'visible') ? 'hidden' : 'visible';
            grid.jqGrid('setGridState',state);
        }
        },
        {
        id : 'show_hide_col',
        //cloasoncall : true,
        title : 'Show/Hide column',
        click : function ( event) {
        grid.jqGrid('columnChooser');

        }
        }
        ]);

        // workaround set width to 100%
        var newWidth = grid.closest(".ui-jqgrid").parent().width();
        grid.jqGrid("setGridWidth", newWidth, true);

        $('td#add_grid.ui-pg-button').off('click').on('click', function(e){
        e.preventDefault();
        e.stopPropagation();
        //alert("I was clicked");
        window.location.href = 'editor.xhtml';
        }
        )

        // $('#grid').getGridParam('page')
        //$("#grid").trigger("reloadGrid",[{page:#{editEmployeeController.currentTabPage}}]);
       // grid.trigger("reloadGrid",[{page:10}]);
        //grid.trigger("reloadGrid");
        //set page
        $('#grid').jqGrid('setGridParam', {page: #{editEmployeeController.currentTabPage}});

        //refresh grid
        $('#grid').trigger( 'reloadGrid' );
        });

/*
        set page
        $('#jqGrid').jqGrid('setGridParam', {page: '3'});

        refresh grid
        $('#jqGrid').trigger( 'reloadGrid' );



        */



    </h:outputScript>
</ui:composition>