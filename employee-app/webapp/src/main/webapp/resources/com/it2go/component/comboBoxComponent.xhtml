<ui:component
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
        xmlns:cc="http://xmlns.jcp.org/jsf/composite"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:jsf="http://xmlns.jcp.org/jsf"
        xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">

    <cc:interface componentType="selectComponentImpl">
        <cc:attribute name="value" required="true"
                      shortDescription="The selected value." />
        <cc:attribute name="label"
                      shortDescription="the label." />
        <cc:attribute name="items"/>
        <cc:attribute name="isRequired" default="false" type="boolean"
                      shortDescription="if the value is required"/>
        <cc:attribute name="disabled" default="false" type="boolean"
                      shortDescription="the input is rendered but disabled"/>
        <cc:attribute name="readOnly" default="false" type="boolean"
                      shortDescription="readOnlx means the comonent is rendered as string"/>
        <cc:attribute name="ajaxRender"
                      shortDescription="add which ids to render after ajax validation e.e (@form text1)"/>
        <cc:editableValueHolder name="input" targets="editableText"/>
        <cc:clientBehavior name="changed" event="change" targets="editableText"/>
        <cc:facet name="selectOneMenuTemplate"/>
        <cc:facet name="preTemplate"/>
        <cc:facet name="postTemplate"/>
        <cc:attribute name="decorated" default="false"
                      shortDescription="make the contnent of display widget the same as the selected item from dropdown"/>
    </cc:interface>
    <!-- zwei neben einander liegenden dropdowns im ersten die region (continent) im zweiten stehen die länder  -->
    <cc:implementation>
        <div id="#{cc.clientId}">
            <div jsf:id="inputContainer" class="inputContainer">
                <div class="input-group">
                    <cc:renderFacet name="preTemplate"/>
                    <h:selectOneMenu id="editableText" value="#{cc.attrs.value}" styleClass="form-control"  pt:data-valid="#{cc.input.valid}"
                                     style="width: 100%" binding="#{cc.input}" required="#{cc.attrs.isRequired}" pt:data-component-type="comboBox"
                                     label="#{cc.attrs.label}"   >
                        <f:selectItem
                                itemLabel="-- Bitte wählen --" itemValue=""/>
                        <f:selectItems value="#{cc.attrs.items}" var="item"
                                       itemLabel="#{masterdataService.getLocalizedNameFor(item)}" itemValue="#{item.code}" />
                        <f:ajax execute="@this" event="change" render="#{cc.clientId} #{cc.attrs.ajaxRender}" onevent="validateInput"/>
                    </h:selectOneMenu>

                    <cc:renderFacet name="postTemplate"/>
                    <!-- draw table with cols-->
                    <div style="display: none">
                        <ul>
                            <li id="#{cc.clientId}-li-0">-- Bitte wählen --</li>
                            <ui:repeat value="#{cc.attrs.items}" var="item" varStatus="status">
                                <li id="#{cc.clientId}-li-#{status.index + 1}">
                                    <c:choose>
                                        <c:when test="#{cc.facets.containsKey('selectOneMenuTemplate')}">
                                            <cc:renderFacet name="selectOneMenuTemplate">
                                                <f:param name="item" value="#{item}"/>
                                            </cc:renderFacet>
                                        </c:when>
                                        <c:otherwise>
                                            #{item.toString()}
                                        </c:otherwise>
                                    </c:choose>
                                </li>
                            </ui:repeat>
                        </ul>
                    </div>
                </div>
                <h:outputScript>
                    initComboBox(encodeId("#{cc.clientId}:editableText" ),encodeId("#{cc.clientId}-li-"));
                </h:outputScript>

                <div class="invalid-feedback" style="position: absolute;top: 40px;">
                    <h:message id="message" for="editableText"/>
                </div>
            </div>
        </div>
    </cc:implementation>
</ui:component>