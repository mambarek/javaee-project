<ui:component
              xmlns:h="http://xmlns.jcp.org/jsf/html"
              xmlns:f="http://java.sun.com/jsf/core"
              xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
              xmlns:cc="http://xmlns.jcp.org/jsf/composite"
              xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
              xmlns:jsf="http://xmlns.jcp.org/jsf"
              xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">

    <cc:interface >
        <cc:attribute name="model" type="java.lang.Object"
                      shortDescription="The model value." />
        <cc:attribute name="value" required="true"
                      shortDescription="The selected value." />
        <cc:attribute name="logicalName"
                      shortDescription="The logical name." />
        <cc:attribute name="label"
                      shortDescription="the label." />
        <cc:attribute name="inputType" default="text"
                      shortDescription="the type of the input (text date)"/>
        <cc:attribute name="isRequired" default="false" type="boolean"
                      shortDescription="if the value is required"/>
        <cc:attribute name="disabled" default="false" type="boolean"
                      shortDescription="the input is rendered but disabled"/>
        <cc:attribute name="readOnly" default="false" type="boolean"
                      shortDescription="readOnlx means the comonent is rendered as string"/>
        <cc:attribute name="placeholder"
                      shortDescription="HTML5 palceholder for the input"/>
        <cc:attribute name="ajaxValidation" default="true" type="boolean"
                      shortDescription="enable onChange event ajax validation. default true"/>
        <cc:attribute name="ajaxRender"
                      shortDescription="add which ids to render after ajax validation e.e (@form text1)"/>
        <cc:attribute name="datePattern" default="dd.mm.yyyy"
                      shortDescription="pattern for date"/>
        <cc:attribute name="language" default="de"
                      shortDescription="The application language. may be useful for many inputs"/>
        <cc:attribute name="locale" type="java.util.Locale" default="#{java.util.Locale.GERMAN}"
                      shortDescription="The application language. may be useful for many inputs"/>

        <cc:facet name="inputGroupAddon"
                  shortDescription="adds bootstrap addon button to input"/>

        <cc:editableValueHolder name="input" targets="editableText"/>
        <cc:clientBehavior name="changed" event="change" targets="editableText"/>
        <cc:clientBehavior name="click" event="click" targets="editableText"/>
        <!-- Radio buttons -->
        <cc:attribute name="radioItems"/>
        <cc:attribute name="radioLabel"/>
        <cc:attribute name="radioValue"/>
        <cc:facet name="radioFacet"/>
        <cc:facet name="selectOnMenuTemplate"/>
    </cc:interface>

    <cc:implementation>
        <div id="#{cc.clientId}" class="inputWidget" data-component-name="rowForm">
            <div class="form-group row">
                <h:outputLabel styleClass="col-sm-3 col-form-label" value="x-#{cc.attrs.label}"/>
                <div class="col-sm-9">
                    <c:if test="#{!cc.attrs.readOnly}">
                        <div  class="inputContainer" style="height: 100%">

                        <c:choose>
                            <!-- CHOOSE BLOCK BEGIN-->
                            <!-- text -->
                            <c:when test="#{cc.attrs.inputType eq 'text'}">
                                <div class="input-group">
                                    <h:inputText styleClass="form-control"  id="editableText"
                                                 value="#{cc.attrs.value}" required="#{cc.attrs.isRequired}"
                                                 pt:data-required="#{cc.attrs.isRequired}"
                                                 disabled="#{cc.attrs.disabled}" pt:data-valid="#{component.valid}"
                                                 pt:placeholder="" label="#{cc.attrs.label}">

                                        <f:ajax execute="@this" render="#{cc.clientId} #{cc.attrs.ajaxRender}" onevent="validateInput"
                                                event="change" disabled="#{!cc.attrs.ajaxValidation}"/>
                                        <f:attribute name="model" value="#{cc.attrs.model}"/>
                                        <f:attribute name="logicalName" value="#{cc.attrs.logicalName}"/>
                                    </h:inputText>
                                    <cc:renderFacet name="inputGroupAddon"/>
                                </div>
                            </c:when>
                            <!-- date -->
                            <c:when test="#{cc.attrs.inputType eq 'date'}">
                                <div class="input-group date" data-provide="datepicker" data-date-autoClose="true"  >
                                    <h:inputText styleClass="form-control"  id="editableText"
                                                 value="#{cc.attrs.value}" required="#{cc.attrs.isRequired}" pt:data-required="#{cc.attrs.isRequired}"
                                                 disabled="#{cc.attrs.disabled}" pt:data-valid="#{component.valid}"
                                                 label="#{cc.attrs.label}"
                                                 pt:placeholder="" >
                                        <f:convertDateTime pattern="#{employeeMsg['employee.app.date.pattern']}"/>
                                        <f:ajax execute="@this" render="#{cc.clientId} #{cc.attrs.ajaxRender}" onevent="validateInput" event="change"/>
                                        <f:attribute name="model" value="#{cc.attrs.model}"/>
                                        <f:attribute name="logicalName" value="#{cc.attrs.logicalName}"/>
                                    </h:inputText>
                                    <h:outputScript >
                                        var id = '#' + encodeId('#{cc.clientId}:editableText');
                                        var pattern =  employee_i18n['employee.app.date.pattern'];
                                        console.info("Datepicker id: " + id + " Pattern: " + pattern);
                                        $(id).datepicker($.datepicker.regional[employee_i18n['locale']]);
                                        $(id).datepicker( "option", {
                                            "dateFormat": employee_i18n['employee.app.javascript.date.pattern'],
                                            "changeMonth": true ,
                                            "changeYear": true,
                                            "yearRange": "c-100:c+100"
                                            });
                                        $(id).datepicker( "setDate",$(id).attr('value')).inputmask(employee_i18n['employee.app.date,inputmask.format'],
                                        {placeholder: employee_i18n['employee.app.date,inputmask.pattern'], showMaskOnHover: false});
                                    </h:outputScript>
                                </div>
                            </c:when>

                            <c:when test="#{cc.attrs.inputType eq 'custom-radio'}">
                                <h:inputHidden id="editableText" binding="#{hiddenInput}" value="#{cc.attrs.value}"  label="#{cc.attrs.label}"
                                               required="#{cc.attrs.isRequired}" />
                                <div class="input-group" data-isRadio="true" data-valid="#{hiddenInput.valid}">
                                    <ui:repeat value="#{cc.attrs.radioItems}" var="item" varStatus="indexStatus">
                                        <div class="custom-control custom-radio custom-control-inline">
                                            <input class="custom-control-input" type="radio" pt:name="#{cc.clientId}"  label="#{cc.attrs.label}"
                                                   jsf:id="radio" value="#{item}" required="#{cc.attrs.isRequired}" data-required="#{cc.attrs.isRequired}"
                                                   checked="#{item eq cc.attrs.value ? 'checked' : null}" data-valid="#{hiddenInput.valid}">
                                                <f:ajax execute="@this" render="#{cc.clientId}" event="change" onevent="validateInput"/>
                                            </input>
                                            <label jsf:id="label" class="custom-control-label" jsf:for="radio">#{masterdataService.getLocalizedNameFor(item)}</label>
                                        </div>
                                    </ui:repeat>

                                    <h:inputHidden id="editableText" binding="#{hiddenInput}" value="#{cc.attrs.value}"  label="#{cc.attrs.label}"
                                                   required="#{cc.attrs.isRequired}" >
                                        <f:attribute name="model" value="#{cc.attrs.model}"/>
                                        <f:attribute name="logicalName" value="#{cc.attrs.logicalName}"/>
                                    </h:inputHidden>
                                    <h:outputScript >
                                        // reset the hidden input
                                        $(function() {
                                        var id = '#' + encodeId('#{cc.clientId}');
                                        var checked = $(id).find("input[type='radio']:checked").val();
                                        //console.info("Found checked redios:",checked);
                                        //console.info("Found checked redios undefined:",checked == undefined);
                                        if(checked == undefined || checked.length == 0){
                                        var hiddenId = '#' + encodeId('#{cc.clientId}:editableText');
                                        //console.info("Found hidden input:",$(hiddenId));
                                        $(hiddenId)[0].value = null;
                                        }

                                        });
                                    </h:outputScript>
                                </div>
                            </c:when>

      <!-- End choose -->
                        </c:choose>
                        <!-- error message output -->
                        <div class="invalid-feedback">
                            <h:message id="message" for="editableText"/>
                        </div>
                    </div>
                    </c:if>
                    <!-- if readonly so render the display value. the input is not rendered s. class AbstractFormRow -->
                    <c:if test="#{cc.attrs.readOnly}">
                        <span>#{cc.displayValue}</span>
                    </c:if>
                </div>
            </div>
        </div>
    </cc:implementation>
</ui:component>