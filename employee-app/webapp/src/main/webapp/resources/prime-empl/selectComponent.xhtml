<ui:component
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
        xmlns:cc="http://xmlns.jcp.org/jsf/composite"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:pe="http://xmlns.jcp.org/jsf/composite/prime-empl"
        xmlns:jsf="http://xmlns.jcp.org/jsf"
        xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
        xmlns:p="http://primefaces.org/ui">

    <cc:interface componentType="selectComponentImpl">
        <cc:attribute name="value" required="true"
                      shortDescription="The selected value." />
        <cc:attribute name="label"
                      shortDescription="the label." />
        <cc:attribute name="items"/>
        <cc:attribute name="targetAttr"/>
        <cc:attribute name="isRequired" default="false" type="boolean"
                      shortDescription="if the value is required"/>
        <cc:attribute name="disabled" default="false" type="boolean"
                      shortDescription="the input is rendered but disabled"/>
        <cc:attribute name="readOnly" default="false" type="boolean"
                      shortDescription="readOnlx means the comonent is rendered as string"/>
        <cc:attribute name="ajaxRender"
                      shortDescription="add which ids to render after ajax validation e.e (@form text1)"/>
        <cc:editableValueHolder name="input" targets="editableText"/>
        <cc:clientBehavior name="changed" event="change" targets="editableText"/>
        <cc:facet name="selectOneMenuTemplate"/>
        <cc:attribute name="decorated" default="false" type="boolean"
                      shortDescription="make the contnent of display widget the same as the selected item from dropdown"/>
    </cc:interface>
    <cc:implementation>
        <div id="#{cc.clientId}">
        <div jsf:id="inputContainer" class="inputContainer">
            <div class="input-group">
                <h:selectOneMenu value="#{cc.attrs.value}" id="editableText" styleClass="form-control" pt:data-valid="#{cc.input.valid}"
                                 style="width: 100%" required="#{cc.attrs.isRequired}"  binding="#{cc.input}">
                    <f:selectItem
                            itemLabel="#{cc.resourceBundleMap['employee.selectone.empty.text']}" itemValue=""/>
                    <f:selectItems value="#{cc.attrs.items}" var="item"
                                   itemLabel="#{masterdataService.getLocalizedNameFor(item)}" itemValue="#{applicationController.invoke(item,cc.attrs.targetAttr)}" />
                    <c:choose>
                        <c:when test="#{!empty cc.attrs.ajaxRender}">
                            <f:ajax execute="@this" render="#{cc.attrs.ajaxRender}" event="change" onevent="handleAjax" />
                        </c:when>
                        <c:otherwise>
                            <f:ajax execute="@this" event="change" render="#{cc.clientId}" onevent="handleAjax"/>
                        </c:otherwise>
                    </c:choose>
                </h:selectOneMenu>
                <!-- draw table with cols-->
                <div style="display: none">
                    <ul>
                        <li id="#{cc.clientId}-li-0">-- Bitte w√§hlen #{cc.attrs.decorated} --</li>
                        <ui:repeat value="#{cc.attrs.items}" var="item" varStatus="status">
                            <li id="#{cc.clientId}-li-#{status.index + 1}">
                                <c:choose>
                                    <c:when test="#{cc.facets.containsKey('selectOneMenuTemplate')}">
                                        <cc:renderFacet name="selectOneMenuTemplate">
                                            <f:param name="item" value="#{item}"/>
                                        </cc:renderFacet>
                                    </c:when>
                                    <c:otherwise>
                                        #{item.toString()}
                                    </c:otherwise>
                                </c:choose>
                            </li>
                        </ui:repeat>
                    </ul>
                </div>
            </div>
            <h:outputScript>
                initSelectOneMenu(encodeId("#{cc.clientId}:editableText" ), encodeId("#{cc.clientId}-li-"), "#{cc.attrs.decorated}");
            </h:outputScript>
        </div>
        </div>
    </cc:implementation>
</ui:component>